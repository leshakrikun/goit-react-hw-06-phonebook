{"version":3,"sources":["components/Contacts/contacts.module.css","components/PhoneBook/phonebook.module.css","components/Filter/filter.module.css","redux/types.js","redux/store.js","components/PhoneBook/phoneBook.js","redux/actions.js","components/Contacts/contacts.js","components/Filter/filter.js","App.js","index.js"],"names":["module","exports","types","initialState","contacts","JSON","parse","window","localStorage","getItem","filter","result","handlers","state","actions","payload","id","store","createStore","handler","type","default","devToolsEnhancer","Phonebook","dispatch","useDispatch","useState","name","setName","number","setNumber","useContext","PhoneContext","handleChange","e","target","value","className","s","phonebook","formPhoneBook","onSubmit","data","preventDefault","find","alert","uuidv4","onChange","pattern","title","required","Contacts","useSelector","console","log","handleDeleteContact","deleteContact","contactListformat","contactList","map","contactItem__btn","onClick","Filter","findcontacts","findInput","normalizedFilter","toLowerCase","cont","includes","createContext","App","useEffect","setItem","stringify","Provider","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4276f20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem__btn\":\"contacts_contactItem__btn__mdf4X\",\"contactList\":\"contacts_contactList__1Ui5w\",\"contactListformat\":\"contacts_contactListformat__3TBy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formPhoneBook\":\"phonebook_formPhoneBook__94Gnw\",\"phonebook\":\"phonebook_phonebook__3K5st\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findcontacts\":\"filter_findcontacts__2jD_4\",\"findInput\":\"filter_findInput__RquXd\"};","export const types = {\r\n    ADD_CONTACTS: \"ADD_CONTACTS\",\r\n    DELETE_CONTACT: \"DELETE_CONTACT\",\r\n    FILTER_CONTACTS: \"FILTER_CONTACTS\",\r\n}\r\n","import {createStore, applyMiddleware} from 'redux'\r\nimport { devToolsEnhancer} from 'redux-devtools-extension'\r\nimport {types} from './types'\r\n/* const reducer = (state = {}, action) => {\r\n    console.log('log action in reducer: ', action);    \r\n    return state;\r\n}; */\r\nconst initialState = {\r\n    contacts: JSON.parse(window.localStorage.getItem('contacts')) ?? [],\r\n    filter: '',\r\n    result:'',\r\n}\r\n/* \r\nconst reducerContacts = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n      case 'addContact':\r\n        return {...state, contacts:[...state.contacts, payload]};\r\n      case 'deleteContact':\r\n        return {...state, contacts:[...state.contacts.filter((state) => state.id !== payload.id)]};\r\n      case 'filterContact':\r\n        return {...state, filter: payload};\r\n      default:\r\n        return state\r\n    };\r\n}; */\r\nconst handlers = {\r\n    [types.ADD_CONTACTS]: (state, actions) => ({\r\n        ...state,\r\n        contacts: [...state.contacts, actions.payload],\r\n    }),\r\n\r\n    [types.DELETE_CONTACT]: (state, actions) => ({    ...state,\r\n        contacts: [...state.contacts.filter((state) => state.id !== actions.payload)],\r\n    }),\r\n\r\n    [types.FILTER_CONTACTS]: (state, actions) => ({  ...state,\r\n        filter: actions.payload,\r\n    }),\r\n        \r\n\r\n    default: (state) => state,\r\n};\r\n\r\nconst reducerContacts = (state = initialState, actions) => {\r\n    const handler = handlers[actions.type] || handlers.default;\r\n    return handler(state, actions);\r\n};\r\n\r\n\r\n\r\n\r\nconst store = createStore(reducerContacts, devToolsEnhancer())\r\nexport default store ","import {React, useState, useContext} from 'react';\r\nimport s from './phonebook.module.css';\r\nimport { PhoneContext } from '../../App.js'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {useDispatch} from 'react-redux'\r\nimport {addContact} from '../../redux/actions.js'\r\n\r\n\r\nconst Phonebook = () => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const {/* dispatch ,*/ state} = useContext(PhoneContext)\r\n  const { contacts } = state\r\n\r\n  const handleChange = e => {\r\n    const {name, value} = e.target;\r\n    /* setContact({...contact, [name]: value }) */\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n        \r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      \r\n      default:\r\n        return;   \r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (contacts){\r\n      state.result = contacts.find(state  => name === state.name );\r\n    } \r\n    if(state.result){\r\n      alert(name + ` is already in contact`)\r\n      setName('')\r\n      setNumber('')\r\n    }\r\n    else {\r\n      dispatch(addContact({name, number, id: uuidv4()}))\r\n      setName('')\r\n      setNumber('')\r\n  }}\r\n\r\n  return (\r\n    <div className={s.phonebook}>\r\n    <h2>Phonebook</h2>\r\n    <div className={s.formPhoneBook}>\r\n    <p>Name</p>\r\n    <form onSubmit={handleSubmit}>    \r\n    <input\r\n      type=\"text\"\r\n      onChange={handleChange}  \r\n      name=\"name\" \r\n      value={name}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      required\r\n    />\r\n    <p>Number</p>\r\n    <input\r\n      type=\"tel\"\r\n      name=\"number\"\r\n      onChange={handleChange} \r\n      value={number} \r\n      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n      title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n      required\r\n    />\r\n    <button type=\"submit\">Add contact</button>\r\n    </form>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n  export default Phonebook\r\n","import {types} from './types'\r\n\r\nexport const myAction = {\r\n    type: 'MY_ACTION',\r\n    payload: 'super payload',\r\n    contacts: {\r\n        items: [],\r\n        filter: ''\r\n    }\r\n}\r\n\r\nexport const myNewAction = (value) => {\r\n    return {\r\n    type: 'MY_ACTION',\r\n    payload: value,\r\n    contacts: {\r\n        items: [],\r\n        filter: ''\r\n    }}\r\n}\r\n\r\nexport const myOldAction = (value) => ({\r\n    type: 'MY_ACTION',\r\n    payload: value,\r\n    contacts: {\r\n        items: [],\r\n        filter: ''\r\n    }\r\n})\r\n\r\nexport const addContact = (data) => ({\r\n    type: types.ADD_CONTACTS,\r\n    payload: data,\r\n    }\r\n)\r\nexport const deleteContact = (id) => ({\r\n    type: types.DELETE_CONTACT,\r\n    payload: id,\r\n    }\r\n)\r\nexport const filterContact = (data) => ({\r\n    type: types.FILTER_CONTACTS,\r\n    payload: data,\r\n    }\r\n)","import {React, useContext} from 'react';\r\nimport { PhoneContext } from '../../App.js'\r\n/* import Store from '../src/redux/store' */\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {deleteContact} from '../../redux/actions.js'\r\nimport s from './contacts.module.css';\r\n\r\nconst Contacts  = ({contacts}) => {\r\n    /* console.log('contacts1', contacts); */\r\n    const state = useSelector((state) => state)\r\n    console.log('state_COnt',state);\r\nconsole.log('state.contacts_state_COnt', state.contacts);\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const handleDeleteContact = (id) => {\r\n        dispatch(deleteContact( id ))\r\n    };\r\n    return (\r\n        \r\n        <div className={s.contactListformat}>\r\n        <ul className={s.contactList}>\r\n        {contacts.map(({id,name,number})  => (\r\n            <li key={id}>\r\n                {name}: { }\r\n                {number}\r\n                <button\r\n                    type=\"button\"\r\n                    className={s.contactItem__btn}\r\n                    onClick={() => handleDeleteContact(id)}>\r\n                    Удалить\r\n                </button>\r\n            </li>\r\n        ))}\r\n        </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default  Contacts;","import {React, useContext} from 'react';\r\nimport { PhoneContext } from '../../App.js'\r\nimport {filterContact} from '../../redux/actions.js'\r\n\r\nimport s from './filter.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n  \r\nconst Filter = () => {\r\n  const state = useSelector((state) => state)\r\n  const dispatch = useDispatch();\r\n  const handleChange = e => {\r\n    const {name, value} = e.target;\r\n    dispatch(filterContact( (value) ))\r\n\r\n//======================================================================================\r\n    if(state.filter){\r\n      console.log(56, state.filter);\r\n      const normalizedFilter = state.filter.toLowerCase();\r\n      return (state.contacts.filter(cont =>\r\n        cont.name.toLowerCase().includes(normalizedFilter),\r\n    ))}\r\n    console.log(57, state);\r\n    return (state.contacts)\r\n//======================================================================================    \r\n   /*  switch (name) {\r\n      case 'filter':\r\n        dispatch(filterContact( (value) ))\r\n        break;\r\n      default:\r\n        return;  \r\n    } */ \r\n  }  \r\n\r\n  \r\n  return (\r\n    <>\r\n      <h2>Contacts</h2>\r\n      <label className={s.findcontacts}> \r\n        Find contacts by name\r\n        <input className={s.findInput} type=\"text\" name=\"filter\" onChange={ handleChange} />\r\n      </label>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Filter;\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n} ;\r\n","import { useReducer, createContext, useEffect } from 'react';\nimport {useSelector} from 'react-redux'\nimport Phonebook from './components/PhoneBook/phoneBook';\nimport Contacts from './components/Contacts/contacts';\nimport Filter from './components/Filter/filter';\nimport './App.css';\nimport Store from '../src/redux/store'\n\n/* const initialState = {\n  contacts: JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  filter: '',\n  result:'',\n} */\nexport const PhoneContext = createContext();\n\n/* const reducer = (state, {type, payload}) => {\n  switch (type) {\n    case 'addContact':\n      return {...state, contacts:[...state.contacts, payload]};\n    case 'deleteContact':\n      return {...state, contacts:[...state.contacts.filter((state) => state.id !== payload.id)]};\n    case 'filterContact':\n      return {...state, filter: payload};\n    default:\n      throw new Error()\n  };\n}; */\n\nexport default function App () {\n  const state = useSelector((state) => state)\nconsole.log('state',state);\nconsole.log('state.contacts', state.contacts);\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(state.contacts));\n  }, [state]);\n  \n  const getVisibleContacts = () => {\n    if(state.filter){\n      console.log(56, state.filter);\n      const normalizedFilter = state.filter.toLowerCase();\n      return (state.contacts.filter(cont =>\n        cont.name.toLowerCase().includes(normalizedFilter),\n    ))}\n    console.log(57, state);\n    return (state.contacts)\n  };\n\n  return (\n\n  <PhoneContext.Provider value = {{state}}>\n    <Phonebook />\n      {\n    <>\n    <Filter /* value={filter}  *//* handleChange={handleChange}  *//>\n    <Contacts contacts={getVisibleContacts()} /></>}\n    \n  </PhoneContext.Provider>\n  )\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store'\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store= {store}>\n      <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}